//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using UnityEngine;
using UnityEngine.UI;
using System.Collections;
using System.Collections.Generic;

public class GameQAPanel : UIBase
{
    public Button CloseBtn_Button;
    public Transform Content;
    public Transform Item;

    public Button addEcpmBtn;
    public InputField mInputFill;

    public Button addVedio;
    public InputField vedioFill;
    private Dictionary<string, Action> mDic =new Dictionary<string, Action>(100);
    private void Start()
    {
        CloseBtn_Button.onClick.AddListener(Hide);

        SetInfo();

        UpdateUI();

        addEcpmBtn.onClick.AddListener(() => {
            if (AdControl.Instance.isShowAd) AdControl.Instance.isShowAd = false;
            if (mInputFill.text != null)
            {
                ConfigMgr.Instance.ecpm = Convert.ToSingle(mInputFill.text); ;
                Debug.Log("EcpmEcpmEcpmEcpm" + ConfigMgr.Instance.ecpm);
            }


        });
        addVedio.onClick.AddListener(() => {

            if (vedioFill.text != null)
            {
                ConfigMgr.Instance.videos = int.Parse(vedioFill.text); ;
                Debug.Log("EcpmEcpmEcpmEcpm" + ConfigMgr.Instance.videos);
            }
        });
    }

    private void SetInfo()
    {
        AddInfo("开启广告", () => { AdControl.Instance.isShowAd = true; });
        AddInfo("关闭广告", () => { AdControl.Instance.isShowAd = false; });
        AddInfo("直接通关", () => { GameManager.Instance.PassGame(); Hide(); });
        AddInfo("增加红包币+1000", () => { RedWithdrawData.Instance.UpdateRedIcon(1000); });
        AddInfo("增加金猪币+1000", () => { PiggyBankData.Instance.UpdatePiggyBank(1000); });
        AddInfo("添加星光宝箱数量", () => { GameManager.Instance.StarShineStarSub.Value += 10; });
        AddInfo("解锁关卡+10", () => {
            for (int i = 0; i < 10; i++)
            {
                DataManager.Instance.data.levelStar.Add(0);
            }
            DataManager.Instance.data.UnlockLevel += 10; InfiniteScrollView.Instance.RefreshLevelMap();
            InfiniteScrollView.Instance.InitAvatar();
            OrderSystemControl.Instance.AddOrderLevel(10);
        });
        AddInfo("解锁关卡+1", () => {
            for (int i = 0; i < 1; i++)
            {
                DataManager.Instance.data.levelStar.Add(0);
            }
            DataManager.Instance.data.UnlockLevel += 1; InfiniteScrollView.Instance.RefreshLevelMap();
            InfiniteScrollView.Instance.InitAvatar();
            OrderSystemControl.Instance.AddOrderLevel(1);
        });
        AddInfo("添加星光星星+10",()=>{
            GameManager.Instance.StarShineStarSub.Value += 10;
        });
        AddInfo("添加瓶子能量+95",()=> {
            //DataManager.Instance.data.ChallengeStar += 10;
            //UIManager.Instance.Refresh<MainPanel>();
            GameManager.Instance.EliminatPower.Value=290;
        });
        AddInfo("关闭新手引导", () => {
            GuideMgr.Instance.CloseGuide();
        });
        AddInfo("完成当日猫任务", () => {
            //GuideMgr.Instance.CloseGuide();
            CatManager.Instance.catData.now[0] = 10;
            CatManager.Instance.catData.now[1] = 100;
            //CatManager.Instance.catData.IsGet[1] = true;

            CatManager.Instance.SaveData();
        });
        AddInfo("添加转盘进度条50", () => {
            LotteryDataManger.Instance.AddFillPro(50);
        });
        AddInfo("添加转盘次数10", () => {
            LotteryDataManger.Instance.AddLotteryPaper(10);
        });
        AddInfo("打开七日提现", () =>
        {
            ShowDailyInfoDataControl.Instance.mdata.dailyEpm = 200;
        });
        AddInfo("打开/关闭ecpm弹窗", () =>
        {
            if (EcpmPanel.ShowPanel) EcpmPanel.ShowPanel = false;
            else EcpmPanel.ShowPanel = true;

        });
        

    }


    private void AddInfo(string dir, Action action)
    {
        mDic.Add(dir,action);
    }

    private void UpdateUI()
    {
        Debug.LogError(mDic.Count);
        var creats = mDic.Count - 1;
        for (int i = 0; i < creats; i++)
        {
            Instantiate(Item, Content, false);
        }

        int idex = 0;
        foreach (var info in mDic)
        {
            Transform mtrans = Content.GetChild(idex);
            mtrans.Find("Text").GetText().text = info.Key;
            mtrans.GetButton().onClick.AddListener(() => { info.Value.Run(); });
            idex += 1;
        }
    }


}
