//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace EasyExcelGenerated
{
	[Serializable]
	public class StarScore : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private int _ID;
		public int ID { get { return _ID; } }

		[SerializeField]
		private int _onestar;
		public int onestar { get { return _onestar; } }

		[SerializeField]
		private int _twostar;
		public int twostar { get { return _twostar; } }

		[SerializeField]
		private int _threestar;
		public int threestar { get { return _threestar; } }

		[SerializeField]
		private int _FullMarks;
		public int FullMarks { get { return _FullMarks; } }

		[SerializeField]
		private int _OneDiamond;
		public int OneDiamond { get { return _OneDiamond; } }

		[SerializeField]
		private int _diamond;
		public int diamond { get { return _diamond; } }

		[SerializeField]
		private int _gem;
		public int gem { get { return _gem; } }

		[SerializeField]
		private int _raffle;
		public int raffle { get { return _raffle; } }

		[SerializeField]
		private int _money;
		public int money { get { return _money; } }


		public StarScore()
		{
		}

#if UNITY_EDITOR
		public StarScore(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _ID);
			TryParse(sheet[row][column++], out _onestar);
			TryParse(sheet[row][column++], out _twostar);
			TryParse(sheet[row][column++], out _threestar);
			TryParse(sheet[row][column++], out _FullMarks);
			TryParse(sheet[row][column++], out _OneDiamond);
			TryParse(sheet[row][column++], out _diamond);
			TryParse(sheet[row][column++], out _gem);
			TryParse(sheet[row][column++], out _raffle);
			TryParse(sheet[row][column++], out _money);
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class GameValue_StarScore_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<StarScore> elements = new List<StarScore>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as StarScore);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
