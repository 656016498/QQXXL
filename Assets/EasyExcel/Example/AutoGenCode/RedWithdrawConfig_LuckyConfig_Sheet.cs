//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace EasyExcelGenerated
{
	[Serializable]
	public class LuckyConfig : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private int _id;
		public int id { get { return _id; } }

		[SerializeField]
		private int[] _level;
		public int[] level { get { return _level; } }

		[SerializeField]
		private int _luckys;
		public int luckys { get { return _luckys; } }

		[SerializeField]
		private int _tableType;
		public int tableType { get { return _tableType; } }

		[SerializeField]
		private int _rewardType;
		public int rewardType { get { return _rewardType; } }

		[SerializeField]
		private float _value;
		public float value { get { return _value; } }

		[SerializeField]
		private int _cost;
		public int cost { get { return _cost; } }

		[SerializeField]
		private string _withdrawKey;
		public string withdrawKey { get { return _withdrawKey; } }

		[SerializeField]
		private float _item1;
		public float item1 { get { return _item1; } }

		[SerializeField]
		private float _item2;
		public float item2 { get { return _item2; } }

		[SerializeField]
		private float _item3;
		public float item3 { get { return _item3; } }

		[SerializeField]
		private float _item4;
		public float item4 { get { return _item4; } }

		[SerializeField]
		private float _item5;
		public float item5 { get { return _item5; } }

		[SerializeField]
		private float _item6;
		public float item6 { get { return _item6; } }

		[SerializeField]
		private float _item7;
		public float item7 { get { return _item7; } }

		[SerializeField]
		private float _item8;
		public float item8 { get { return _item8; } }


		public LuckyConfig()
		{
		}

#if UNITY_EDITOR
		public LuckyConfig(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _id);
			string[] _levelArray = sheet[row][column++].Split(',');
			int _levelCount = _levelArray.Length;
			_level = new int[_levelCount];
			for(int i = 0; i < _levelCount; i++)
				TryParse(_levelArray[i], out _level[i]);
			TryParse(sheet[row][column++], out _luckys);
			TryParse(sheet[row][column++], out _tableType);
			TryParse(sheet[row][column++], out _rewardType);
			TryParse(sheet[row][column++], out _value);
			TryParse(sheet[row][column++], out _cost);
			TryParse(sheet[row][column++], out _withdrawKey);
			TryParse(sheet[row][column++], out _item1);
			TryParse(sheet[row][column++], out _item2);
			TryParse(sheet[row][column++], out _item3);
			TryParse(sheet[row][column++], out _item4);
			TryParse(sheet[row][column++], out _item5);
			TryParse(sheet[row][column++], out _item6);
			TryParse(sheet[row][column++], out _item7);
			TryParse(sheet[row][column++], out _item8);
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class RedWithdrawConfig_LuckyConfig_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<LuckyConfig> elements = new List<LuckyConfig>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as LuckyConfig);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
