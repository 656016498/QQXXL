//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by EasyExcel.
//     Runtime Version: 4.0
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using UnityEngine;
using EasyExcel;

namespace EasyExcelGenerated
{
	[Serializable]
	public class LotteryConfig : EERowData
	{
		[EEKeyField]
		[SerializeField]
		private int _ID;
		public int ID { get { return _ID; } }

		[SerializeField]
		private int _AwardType;
		public int AwardType { get { return _AwardType; } }

		[SerializeField]
		private int _AwardNum;
		public int AwardNum { get { return _AwardNum; } }

		[SerializeField]
		private string _AwardName;
		public string AwardName { get { return _AwardName; } }

		[SerializeField]
		private float _AwardCoe;
		public float AwardCoe { get { return _AwardCoe; } }

		[SerializeField]
		private int _Awardweight;
		public int Awardweight { get { return _Awardweight; } }

		[SerializeField]
		private int _weightLimit;
		public int weightLimit { get { return _weightLimit; } }


		public LotteryConfig()
		{
		}

#if UNITY_EDITOR
		public LotteryConfig(List<List<string>> sheet, int row, int column)
		{
			TryParse(sheet[row][column++], out _ID);
			TryParse(sheet[row][column++], out _AwardType);
			TryParse(sheet[row][column++], out _AwardNum);
			TryParse(sheet[row][column++], out _AwardName);
			TryParse(sheet[row][column++], out _AwardCoe);
			TryParse(sheet[row][column++], out _Awardweight);
			TryParse(sheet[row][column++], out _weightLimit);
		}
#endif
		public override void OnAfterSerialized()
		{
		}
	}

	public class MainConfig_LotteryConfig_Sheet : EERowDataCollection
	{
		[SerializeField]
		private List<LotteryConfig> elements = new List<LotteryConfig>();

		public override void AddData(EERowData data)
		{
			elements.Add(data as LotteryConfig);
		}

		public override int GetDataCount()
		{
			return elements.Count;
		}

		public override EERowData GetData(int index)
		{
			return elements[index];
		}

		public override void OnAfterSerialized()
		{
			foreach (var element in elements)
				element.OnAfterSerialized();
		}
	}
}
